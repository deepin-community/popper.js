Description: replace lerna build by rollup
Author: Jérémy Lal <kapouer@mellix.org>
Bug-Debian: https://bugs.debian.org/920749
Forwarded: no
Reviewed-By: Xavier Guimard <yadd@debian.org>
Last-Update: 2019-01-29

--- a/packages/popper/src/index.js
+++ b/packages/popper/src/index.js
@@ -23,6 +23,8 @@
     // make update() debounced, so that it only runs at most once-per-tick
     this.update = debounce(this.update.bind(this));
 
+		this.scheduleUpdate = this.scheduleUpdate.bind(this);
+
     // with {} we create a new object with the options inside it
     this.options = { ...Popper.Defaults, ...options };
 
@@ -102,37 +104,34 @@
   disableEventListeners() {
     return disableEventListeners.call(this);
   }
-
   /**
    * Schedules an update. It will run on the next UI update available.
    * @method scheduleUpdate
    * @memberof Popper
    */
-  scheduleUpdate = () => requestAnimationFrame(this.update);
-
-  /**
-   * Collection of utilities useful when writing custom modifiers.
-   * Starting from version 1.7, this method is available only if you
-   * include `popper-utils.js` before `popper.js`.
-   *
-   * **DEPRECATION**: This way to access PopperUtils is deprecated
-   * and will be removed in v2! Use the PopperUtils module directly instead.
-   * Due to the high instability of the methods contained in Utils, we can't
-   * guarantee them to follow semver. Use them at your own risk!
-   * @static
-   * @private
-   * @type {Object}
-   * @deprecated since version 1.8
-   * @member Utils
-   * @memberof Popper
-   */
-  static Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;
-
-  static placements = placements;
-
-  static Defaults = Defaults;
+  scheduleUpdate() {
+    return requestAnimationFrame(this.update);
+  }
 }
-
+/**
+ * Collection of utilities useful when writing custom modifiers.
+ * Starting from version 1.7, this method is available only if you
+ * include `popper-utils.js` before `popper.js`.
+ *
+ * **DEPRECATION**: This way to access PopperUtils is deprecated
+ * and will be removed in v2! Use the PopperUtils module directly instead.
+ * Due to the high instability of the methods contained in Utils, we can't
+ * guarantee them to follow semver. Use them at your own risk!
+ * @static
+ * @private
+ * @type {Object}
+ * @deprecated since version 1.8
+ * @member Utils
+ * @memberof Popper
+ */
+Popper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;
+Popper.placements = placements;
+Popper.Defaults = Defaults;
 /**
  * The `referenceObject` is an object that provides an interface compatible with Popper.js
  * and lets you use it as replacement of a real DOM node.<br />
